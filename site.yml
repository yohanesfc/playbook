---
- name: Simple server setup
  hosts: all
  gather_facts: no
  vars:
    basic_packages: [htop, curl, wget]

  pre_tasks:
    - name: Gather minimal os_family fact (no sudo)
      ansible.builtin.setup:
        filter: ansible_os_family
      become: false
      failed_when: false

    - name: Fallback detect os_family from /etc/os-release (no sudo)
      ansible.builtin.shell: |
        awk -F= '/^ID_LIKE=|^ID=/{gsub("\"",""); print tolower($2)}' /etc/os-release | head -1
      args:
        executable: /bin/sh
      register: os_like
      changed_when: false
      become: false
      when: ansible_facts.get('os_family') is not defined

    # Prefer setup() fact when present
    - name: Normalize os_family from facts
      ansible.builtin.set_fact:
        os_family: "{{ ansible_facts['os_family'] }}"
      when: ansible_facts.get('os_family') is defined

    # Otherwise derive from /etc/os-release
    - name: Normalize os_family from /etc/os-release
      ansible.builtin.set_fact:
        os_family: >-
          {{ 'RedHat'
             if (os_like is defined and (os_like.stdout | default('')) is search('rhel|centos|fedora'))
             else 'Debian' }}
      when: os_family is not defined

    # Final safety default
    - name: Ensure os_family has a value
      ansible.builtin.set_fact:
        os_family: "{{ os_family | default('Debian') }}"
      when: os_family is not defined

    - name: Debug detected os_family
      ansible.builtin.debug:
        msg: "Detected os_family = {{ os_family }}"

  tasks:
    - name: Update package cache (Debian/Ubuntu)
      ansible.builtin.apt:
        update_cache: yes
      when: os_family == 'Debian'
      become: true

    - name: Update package metadata (RHEL/CentOS/Fedora)
      ansible.builtin.dnf:
        update_cache: yes
      when: os_family == 'RedHat'
      become: true

    - name: Install basic packages (Debian/Ubuntu)
      ansible.builtin.apt:
        name: "{{ basic_packages }}"
        state: present
      when: os_family == 'Debian'
      become: true

    - name: Install basic packages (RHEL/CentOS/Fedora)
      ansible.builtin.dnf:
        name: "{{ basic_packages }}"
        state: present
      when: os_family == 'RedHat'
      become: true

    - name: Create test file
      ansible.builtin.file:
        path: /tmp/awx-test.txt
        state: touch
        mode: '0644'
      become: true
